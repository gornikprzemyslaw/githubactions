# This is a basic workflow to help you get started with Actions

name: Scheduled-CI

# Controls when the workflow will run
on:
#  schedule:
#    - cron: '*/15 * * * *'
  push:
    branches: [ "adding" ]
  pull_request:
    branches: [ "adding" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.SUBSCRIPTION_ID }}

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry --version
          python --version
        shell: bash

      - name: Install packages
        run: |
          cd aks-version
          poetry init
          poetry env list
          poetry add azure-identity azure-communication-email azure-mgmt-containerservice azure-storage-blob loguru
        shell: bash

      - name: Downlod Artifacts
        uses: actions/download-artifact@v3

      - name: List Files
        run: |
          pwd
          ls -R
          

      - name: Send email
        env:
          ENDPOINT: ${{ secrets.ENDPOINT }}
          ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
          STORAGE_ACCOUNT_URL: ${{ secrets.STORAGE_ACCOUNT_URL }}
          SENDER_ADDRESS: ${{ vars.SENDER_ADDRESS }}
          RECIPIENT_ADDRESS: ${{ vars.RECIPIENT_ADDRESS }}
          SECOND_RECIPIENT_ADDRESS: ${{ vars.SECOND_RECIPIENT_ADDRESS }}
          SUBSCRIPTION_ID: ${{ vars.SUBSCRIPTION_ID }}
        run: |   
          ls
          cd aks-version
          poetry run python aksversion.py
          ls
        shell: bash
      - uses: actions/upload-artifact@v4
        with:
          name: minor-versions
          path: /home/runner/aks_versions.json
      - uses: actions/upload-artifact@v4
        with:
          name: patch-versions
          path: /home/runner/aks_patch_versions.json
