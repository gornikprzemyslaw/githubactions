# This is a basic workflow to help you get started with Actions

name: Scheduled-CI

# Controls when the workflow will run
on:
#  schedule:
#    - cron: '*/15 * * * *'
  push:
    branches: [ "adding" ]
  pull_request:
    branches: [ "adding" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.SUBSCRIPTION_ID }}

      - name: Run script file
        run: |
          cd aks-version
          chmod +x ./miniconda.sh
          ./miniconda.sh
        shell: bash

      - name: Create conda environment
        run: |
          cd aks-version
          conda env create -f conda.yml -n aks_version
        shell: bash

      - name: Send email
        run: |
          export ENDPOINT=${{ secrets.ENDPOINT }}
          export ACCESS_KEY=${{ secrets.ACCESS_KEY }}
          export STORAGE_ACCOUNT_URL=${{ secrets.STORAGE_ACCOUNT_URL }}
          export SENDER_ADDRESS=${{ vars.SENDER_ADDRESS }}
          export RECIPIENT_ADDRESS=${{ vars.RECIPIENT_ADDRESS }}
          export SECOND_RECIPIENT_ADDRESS=${{ vars.SECOND_RECIPIENT_ADDRESS }}
          export SUBSCRIPTION_ID=${{ vars.SUBSCRIPTION_ID }}
          
          
          cd aks-version
          conda init
          eval "$(conda shell.bash hook)"
          conda activate aks_version
          python aksversion.py

        shell: bash
